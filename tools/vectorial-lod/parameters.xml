<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties version="1.0">
   <comment>Parameter list for vectorial LOD generation tool</comment>

<!-- Postgis database parameters -->  

   <!-- Url address for postgis database host access -->
   <entry key="HOST">192.168.1.14</entry>
   <!-- <entry key="HOST">igosoftware.dyndns.org</entry> -->
   
   <!-- Port number for postgis database access -->
   <entry key="PORT">5432</entry>
   <!-- <entry key="PORT">5414</entry> -->
   
   <!-- User name for postgis database access -->
   <entry key="USER">postgres</entry>
   
   <!-- User password for postgis database access -->
   <entry key="PASSWORD">postgres1g0</entry>
   
   <!-- Name of the accessed postgis database -->
   <!-- <entry key="DATABASE_NAME">vectorial_test</entry> -->
   <!-- <entry key="DATABASE_NAME">osm</entry> -->
   <entry key="DATABASE_NAME">virginia</entry>

<!-- LOD parameters -->   

   <!-- value used to adjust simplification tolerance for Douglas-Peucker simplification. -->
   <!-- Greater values entail less tolerance, and so on less vertex filtered and more vertex generate -->
   <!-- for the resultant geometry. Usual values between 1.0 to 10.0 -->
   <entry key="QUALITY_FACTOR">1.0</entry>
   
   <!-- Projection selection. true=MERCATOR (epsg:900913 Google) / false=WGS84 (epsg:4326) -->
   <entry key="MERCATOR">true</entry>
   
   <!-- first level of tiles to be generated -->
   <entry key="FIRST_LEVEL">10</entry>
   
   <!-- last level of tiles to be generated -->
   <entry key="MAX_LEVEL">12</entry>
   
   <!-- valid output format: geojson, bson, both -->
   <entry key="OUTPUT_FORMAT">both</entry>
   
   <!-- output folder path, using the correct operating system path separator. By default, LOD folder -->
   <!-- shall be used at the current path. -->
   <entry key="OUTPUT_FOLDER">LOD</entry>

<!-- Parameters for specific vectorial data -->  

   <!-- name of the table in the database with the target vectorial data -->
   <!-- <entry key="DATABASE_TABLE">ne_10m_admin_0_countries</entry> -->
   <!-- <entry key="DATABASE_TABLE">roads</entry> -->
   <!-- <entry key="DATABASE_TABLE">catastro</entry> -->
   <!-- <entry key="DATABASE_TABLE">planet_osm_polygon</entry> -->
   <!-- <entry key="DATABASE_TABLE">planet_osm_roads</entry> -->
   <entry key="DATABASE_TABLE">planet_osm_point</entry>

   <!-- filter criteria using pure database query format that will be included in a where clause -->
   <!-- i.e. "continent" like 'Euro%' AND "pop_est" > 10000000 -->
   <!-- <entry key="FILTER_CRITERIA">("maxspeed">110 or "type"='motorway')</entry> -->
   <!-- <entry key="FILTER_CRITERIA">true</entry> -->
   <entry key="FILTER_CRITERIA">"ele" LIKE '4%' ORDER BY "ele" DESC LIMIT 100</entry>
   
   
   <!-- list of fields/columns associated to the vectorial data that shall be included as feature -->
   <!-- properties in the resultant geoJson file. Use a comma separated list -->
   <!-- <entry key="PROPERTIES">mapcolor7</entry> -->
   <!-- <entry key="PROPERTIES">type</entry> -->
   <!-- <entry key="PROPERTIES">pcat1</entry> -->
   <!-- <entry key="PROPERTIES">building, name</entry> -->
   <!-- <entry key="PROPERTIES">brand</entry> -->
   <entry key="PROPERTIES">capital</entry>
   
</properties>
